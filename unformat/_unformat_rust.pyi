from __future__ import annotations
from typing import Any

__version__: str

def is_named_pattern(ptn: str) -> bool: ...
def unfornat(ptn: str, s: str) -> tuple[dict[str, int], list[Any]]: ...

class _FormatPatternTrait:
    def unformat(self, s: str) -> tuple[dict[str, int], list[Any]]: ...
    def formats(self) -> list[str]: ...
    def matches(self, s: str) -> bool: ...
    def pattern(self) -> str: ...
    def variables(self) -> list[str]: ...
    def with_formats(self, formats: list[str]) -> _FormatPatternTrait: ...

class FormatPattern(_FormatPatternTrait): ...
class NamedFormatPattern(_FormatPatternTrait): ...
